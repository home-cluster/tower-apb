---

- hosts: localhost
  gather_facts: false
  vars:
    openshift_host: 'https://kubernetes.default'
    enable_dangerous_logs: false
    recommended_resources: true
    var_file: '/var/awx/{{ _apb_plan_id|default("all-in-one") }}.yml'
  tasks:
    - when: admin_api_token is not defined
      no_log: '{{ not enable_dangerous_logs }}'
      block:
      - name: read token for current user
        command: oc whoami -t
        register: token
      - name: Set l_openshift_token to current user token
        set_fact:
          l_openshift_token: '{{ token.stdout }}'

    - name: set l_openshift_token to provided token
      set_fact:
        l_openshift_token: '{{ admin_api_token }}'
      no_log: '{{ not enable_dangerous_logs }}'
      when: admin_api_token is defined

    - name: Get name of current user
      command: oc whoami
      register: user

    - name: Set facts for variables that should not be defined if they are not set
      set_fact:
        '{{ item.name }}': '{{ item.value }}'
      when: item.value
      loop:
        - name: web_mem_request
          value: '{{ 0 if not recommended_resources else none }}'
        - name: web_cpu_request
          value: '{{ 0 if not recommended_resources else none }}'
        - name: task_mem_request
          value: '{{ 1 if not recommended_resources else none }}'
        - name: task_cpu_request
          value: '{{ 1000 if not recommended_resources else none }}'
        - name: rabbitmq_mem_request
          value: '{{ 0 if not recommended_resources else none }}'
        - name: rabbitmq_cpu_request
          value: '{{ 0 if not recommended_resources else none }}'
        - name: memcached_mem_request
          value: '{{ 0 if not recommended_resources else none }}'
        - name: memcached_cpu_request
          value: '{{ 0 if not recommended_resources else none }}'

    - name: Set facts from files (vars_files is not allowed in a playbook_import)
      set_fact:
        '{{ item.key }}': '{{ item.value }}'
      loop: '{{ lookup("dict", file_vars) }}'
      vars:
        file_vars: '{{ lookup("file", var_file) | from_yaml }}'

- import_playbook: /usr/share/awx_installer/installer/install.yml
  vars:
    openshift_host: 'https://kubernetes.default'
    openshift_token: '{{ l_openshift_token }}'
    dockerhub_base: '{{ awx_image_org | default("ansible") }}'
    dockerhub_version: '{{ awx_image_tag | default("latest") }}'
    openshift_user: '{{ user.stdout }}'
    openshift_project: '{{ namespace }}'
    awx_kubernetes_namespace: '{{ namespace }}'
    default_admin_password: '{{ awx_admin_password|default("password") }}'
